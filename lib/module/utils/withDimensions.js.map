{"version":3,"sources":["withDimensions.tsx"],"names":["React","Dimensions","hoistNonReactStatic","isOrientationLandscape","width","height","withDimensions","WrappedComponent","EnhancedComponent","props","handleOrientationChange","window","setState","dimensions","isLandscape","get","state","addEventListener","removeEventListener","Component","displayName"],"mappings":"wYAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,OAASC,UAAT,KAAuC,cAAvC,CACA,MAAOC,CAAAA,mBAAP,KAAgC,yBAAhC,CAYA,MAAO,IAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,UAAGC,CAAAA,KAAH,MAAGA,KAAH,CAAUC,MAAV,MAAUA,MAAV,OACpCD,CAAAA,KAAK,CAAGC,MAD4B,EAA/B,CAGP,cAAe,SAASC,CAAAA,cAAT,CACbC,gBADa,CAEgE,IACvEC,CAAAA,iBADuE,0EAI3E,2BAAYC,KAAZ,CAA0B,mDACxB,mFAAMA,KAAN,GADwB,MAkB1BC,uBAlB0B,CAkBA,eAAwC,IAArCC,CAAAA,MAAqC,OAArCA,MAAqC,IACxDP,CAAAA,KADwD,CACtCO,MADsC,CACxDP,KADwD,CACjDC,MADiD,CACtCM,MADsC,CACjDN,MADiD,CAEhE,MAAKO,QAAL,CAAc,CACZC,UAAU,CAAE,CAAET,KAAK,CAALA,KAAF,CAASC,MAAM,CAANA,MAAT,CADA,CAEZS,WAAW,CAAEX,sBAAsB,CAAC,CAAEC,KAAK,CAALA,KAAF,CAASC,MAAM,CAANA,MAAT,CAAD,CAFvB,CAAd,EAID,CAxByB,qBAGEJ,UAAU,CAACc,GAAX,CAAe,QAAf,CAHF,CAGhBX,MAHgB,iBAGhBA,KAHgB,CAGTC,OAHS,iBAGTA,MAHS,CAIxB,MAAKW,KAAL,CAAa,CACXH,UAAU,CAAE,CAAET,KAAK,CAALA,MAAF,CAASC,MAAM,CAANA,OAAT,CADD,CAEXS,WAAW,CAAEX,sBAAsB,CAAC,CAAEC,KAAK,CAALA,MAAF,CAASC,MAAM,CAANA,OAAT,CAAD,CAFxB,CAAb,CAJwB,aAQzB,CAZ0E,2FAcvD,CAClBJ,UAAU,CAACgB,gBAAX,CAA4B,QAA5B,CAAsC,KAAKP,uBAA3C,EACD,CAhB0E,mEAkBpD,CACrBT,UAAU,CAACiB,mBAAX,CAA+B,QAA/B,CAAyC,KAAKR,uBAA9C,EACD,CApB0E,uCA8BlE,CAEP,MAAO,qBAAC,gBAAD,aAAsB,KAAKD,KAA3B,CAAsC,KAAKO,KAA3C,EAAP,CACD,CAjC0E,+BAC7ChB,KAAK,CAACmB,SADuC,EACvEX,iBADuE,CAEpEY,WAFoE,mBAEpCb,gBAAgB,CAACa,WAFmB,KAqC7E,MAAOlB,CAAAA,mBAAmB,CAACM,iBAAD,CAAoBD,gBAApB,CAA1B,CACD","sourcesContent":["import * as React from 'react';\r\nimport { Dimensions, ScaledSize } from 'react-native';\r\nimport hoistNonReactStatic from 'hoist-non-react-statics';\r\n\r\ntype DimensionsType = {\r\n  width: number;\r\n  height: number;\r\n};\r\n\r\ntype InjectedProps = {\r\n  dimensions: DimensionsType;\r\n  isLandscape: boolean;\r\n};\r\n\r\nexport const isOrientationLandscape = ({ width, height }: DimensionsType) =>\r\n  width > height;\r\n\r\nexport default function withDimensions<Props extends InjectedProps>(\r\n  WrappedComponent: React.ComponentType<Props>\r\n): React.ComponentType<Pick<Props, Exclude<keyof Props, keyof InjectedProps>>> {\r\n  class EnhancedComponent extends React.Component {\r\n    static displayName = `withDimensions(${WrappedComponent.displayName})`;\r\n\r\n    constructor(props: Props) {\r\n      super(props);\r\n\r\n      const { width, height } = Dimensions.get('window');\r\n      this.state = {\r\n        dimensions: { width, height },\r\n        isLandscape: isOrientationLandscape({ width, height }),\r\n      };\r\n    }\r\n\r\n    componentDidMount() {\r\n      Dimensions.addEventListener('change', this.handleOrientationChange);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      Dimensions.removeEventListener('change', this.handleOrientationChange);\r\n    }\r\n\r\n    handleOrientationChange = ({ window }: { window: ScaledSize }) => {\r\n      const { width, height } = window;\r\n      this.setState({\r\n        dimensions: { width, height },\r\n        isLandscape: isOrientationLandscape({ width, height }),\r\n      });\r\n    };\r\n\r\n    render() {\r\n      // @ts-ignore\r\n      return <WrappedComponent {...this.props} {...this.state} />;\r\n    }\r\n  }\r\n\r\n  // @ts-ignore\r\n  return hoistNonReactStatic(EnhancedComponent, WrappedComponent);\r\n}\r\n"]}